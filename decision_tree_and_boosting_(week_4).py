# -*- coding: utf-8 -*-
"""Decision Tree and Boosting (Week 4).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1okJZpVQY0qLB86wI7aWaiVebBTDWMF2l
"""

import pandas as pd
import numpy as np

df=pd.read_csv('/content/drive/MyDrive/AI ML Bootcamp/Week 1/diabetes_dataset.csv')

df.head(1)

df.columns

df.isna().sum()

df.isnull().sum()

df.dtypes

df.nunique()

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

x = df.drop('Outcome', axis=1)
y = df['Outcome']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

model=DecisionTreeClassifier(random_state=42)
model.fit(x_train,y_train)

y_pred=model.predict(x_test)
print(accuracy_score(y_test,y_pred))

from matplotlib import pyplot as plt
from sklearn.tree import plot_tree

plt.figure(figsize=(20,20))
plot_tree(model,filled=True,feature_names=x.columns,max_depth=3, fontsize=8)
plt.show()

from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
classification_rep= classification_report(y_test, y_pred)
print("Classification Report:\n", classification_rep)

from sklearn.ensemble import GradientBoostingClassifier
model_gb=GradientBoostingClassifier(random_state=42)
model_gb.fit(x_train,y_train)

y_pred_gb=model_gb.predict(x_test)

accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy:{accuracy:.5f}' )
accuracy_gb = accuracy_score(y_test, y_pred_gb)
print(f'Accuracy Gradient Boosting:{accuracy_gb:.5f}')